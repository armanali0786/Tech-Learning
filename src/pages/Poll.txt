
import React, { useState } from 'react';
import Avatar from 'react-avatar';

import {
  Popover,
  PopoverTrigger,
  PopoverContent,
  Checkbox,
  FormControl,
  FormLabel,
  Input,
  Box,
  Radio, RadioGroup, Stack,
  Button, ButtonGroup,
  Card, CardHeader, CardBody, CardFooter

} from '@chakra-ui/react'

export default function Component() {
  const [darkMode, setDarkMode] = useState(false);
  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
  };
  return (
    <div className={`grid md:grid-cols-2 gap-6 max-w-2xl w-full justify-center items-center ml-5 ${darkMode ? 'bg-gray-900 text-white' : 'bg-light'}`}>
      <div className="space-y-4">
        <div className="space-y-2">
          <h1 className="text-3xl font-bold transition-all duration-300 transform hover:scale-105">
            What's your favorite type of music?
          </h1>
          <p className="text-gray-500 dark:text-gray-400 transition-all duration-300">
            Let us know what music you love to listen to the most.
          </p>
        </div>
        <div className="space-y-4">
          <div className="flex flex-row items-center gap-2">
            <input type="radio" name="fav_language" value="single" />
            <FormLabel>
              Single
            </FormLabel>
            <input type="radio" name="fav_language" value="multiple" />
            <FormLabel>
              Multiple
            </FormLabel>
          </div>
          <div className="grid gap-2">
            <div className="flex flex-row items-center gap-2">
              <Checkbox id="rock" name="rock" />
              <FormLabel
                className="text-sm font-medium cursor-pointer transition-all duration-300 transform hover:scale-105"
                htmlFor="rock"
              >
                Rock
              </FormLabel>
            </div>
            <div className="flex flex-row items-center gap-2">
              <Checkbox id="pop" name="pop" />
              <FormLabel
                className="text-sm font-medium cursor-pointer transition-all duration-300 transform hover:scale-105"
                htmlFor="pop"
              >
                Pop
              </FormLabel>
            </div>
            <div className="flex flex-row items-center gap-2">
              <Checkbox id="hiphop" name="hiphop" />
              <FormLabel
                className="text-sm font-medium cursor-pointer transition-all duration-300 transform hover:scale-105"
                htmlFor="hiphop"
              >
                Hip Hop
              </FormLabel>
            </div>
            <div className="flex flex-row items-center gap-2">
              <Checkbox id="classical" name="classical" />
              <FormLabel
                className="text-sm font-medium cursor-pointer transition-all duration-300 transform hover:scale-105"
                htmlFor="classical"
              >
                Classical
              </FormLabel>
            </div>
          </div>
        </div>
        <div className="space-y-4 ">
          <Button type='submit' className="ml-5 bg-black transition-all duration-300 transform hover:scale-105" size="lg">
            Vote
          </Button>
        </div>
      </div>
      <div className="space-y-4">
        <div className="space-y-4">
          <div className="flex flex-row items-center gap-2">
            <Checkbox id="darkmode" name="darkmode" />
            <FormLabel
              className="text-sm font-medium transition-all duration-300 transform hover:scale-105"
              htmlFor="darkmode"
              onClick={toggleDarkMode}
            >
              Enable dark mode
            </FormLabel>
          </div>
        </div>
        <Card className="transition-all duration-300 transform hover:scale-105">
          <CardBody className="p-4">
            <div className="flex flex-row items-center gap-2">
              <Avatar className="w-10 h-10">
                <Avatar alt="Avatar" src="/placeholder-user.jpg" />
                {/* <AvatarFallback>JD</AvatarFallback> */}
              </Avatar>
              <div className="space-y-1">
                <p className="text-sm font-medium">Created by</p>
                <p className="font-semibold">John Doe</p>
              </div>
            </div>
          </CardBody>
          <CardFooter>
            <div className="flex flex-row items-center gap-2">
              <CalendarIcon className="w-4 h-4" />
              <span className="text-sm text-gray-500 dark:text-gray-400">Ends on Oct 31, 2023</span>
            </div>
          </CardFooter>
        </Card>
      </div>
    </div>
  )
}

function CalendarIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="18" height="18" x="3" y="4" rx="2" ry="2" />
      <line x1="16" x2="16" y1="2" y2="6" />
      <line x1="8" x2="8" y1="2" y2="6" />
      <line x1="3" x2="21" y1="10" y2="10" />
    </svg>
  )
}


function FileEditIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 13.5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2h-5.5" />
      <polyline points="14 2 14 8 20 8" />
      <path d="M10.42 12.61a2.1 2.1 0 1 1 2.97 2.97L7.95 21 4 22l.99-3.95 5.43-5.44Z" />
    </svg>
  )
}


function LinkIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" />
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" />
    </svg>
  )
}


function MoreHorizontalIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="1" />
      <circle cx="19" cy="12" r="1" />
      <circle cx="5" cy="12" r="1" />
    </svg>
  )
}


function TrashIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 6h18" />
      <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
      <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
    </svg>
  )
}
